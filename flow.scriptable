{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "cyan",
    "glyph" : "plane"
  },
  "name" : "flow",
  "script" : "\/*\nauthor：boruiqiao\ntelegram：https:\/\/t.me\/qiaoborui\ngithub:https:\/\/github.com\/qiaoborui\/Script\n请将信息放在两个双引号之间\n*\/\nvar url = \" \"\/\/订阅链接\nvar titles = \" \" \/\/机场名称\nvar size = 11\/\/显示字体大小\nvar colors = []\nvar isdark=Device.isUsingDarkAppearance()\nif(isdark){colors=[\"868f96\",\"596164\"];textcl=Color.white()}\n\/\/ 上面两个为暗黑模式渐变\nelse{colors=[\"4facfe\",\"00f2fe\"];textcl=Color.black()}  \n\/\/ 上面为正常模式渐变\nfunction addTextToListWidget(text, listWidget) {\n\tlet item = listWidget.addText(text)\n\titem.textColor = textcl\n\titem.textSize = size\n}\nvar data = await getdata()\nlet widget = createWidget()\nScript.setWidget(widget)\nScript.complete()\nasync function getdata(){\n  var req = new Request(url)\n  req.method=\"GET\"\n  req.headers= {\n        \"User-Agent\":\n            \"Quantumult\/1.0.13 (iPhone10,3; iOS 14.0)\"\n    };\n  await req.load()\n  const subkey = Object.keys(req.response.headers).filter(k => \/SUBSCRIPTION-USERINFO\/i.test(k))[0];\n  const userinfo = req.response.headers[subkey];\n  var resp = req.response.headers[subkey]\n  const upload_k = Number(userinfo.match(\/upload=(\\d+)\/)[1])\/1048576;\n  const download_k = Number(userinfo.match(\/download=(\\d+)\/)[1])\/1048576;\n  const total_k = Number(userinfo.match(\/total=(\\d+)\/)[1])\/1048576;\n  const expire_time = userinfo.match(\/expire=(\\d+)\/)\n  console.log(userinfo)\n  let expires = \"无信息\"\n  if (expire_time) {\n  expires = formatTime(Number(expire_time[1] * 1000));\n  }\n  return [upload_k,download_k,total_k,expires]\n  console.log(resp)\nreturn resp\n}\nfunction createWidget(){\n  let listWidget = new ListWidget()\n  let backgroundColor = new LinearGradient()\n  backgroundColor.colors = [new Color(colors[0]), new Color(colors[1])]\n  backgroundColor.locations = [0.0, 1]\n  listWidget.backgroundGradient = backgroundColor\n  let emoji = listWidget.addText(\"🧿\")\n  emoji.textSize = 30\n  let title = listWidget.addText(titles)\n  title.applyHeadlineTextStyling()\n  title.textColor = textcl\n  var total = (data[2]\/1024).toFixed(0)\n  var remain = ((data[2]-data[0]-data[1])\/1024).toFixed(2)\n  var use = (total - remain).toFixed(2)\n  var expires = data[3]\n\/\/   addTextToListWidget(\"\\n\",listWidget)\n  addTextToListWidget(`剩余天数：${expires}`,listWidget)\n  addTextToListWidget(`流量总计：${total}GB`,listWidget)\n  addTextToListWidget(`过去使用：${use}GB`,listWidget)\n  addTextToListWidget(`剩余可用：${remain}GB`,listWidget)\n  listWidget.presentSmall()\n\treturn listWidget\n}\nfunction formatTime(timestamp) {\n  const dateStart = Date.parse(new Date());\n  console.log(dateStart)\n  console.log(timestamp)\n  return Math.ceil((timestamp - dateStart) \/ (1000 * 60 * 60 * 24))+\"天\"\n}",
  "share_sheet_inputs" : [

  ]
}
